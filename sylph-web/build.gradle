plugins {
  id("com.github.node-gradle.node") version "2.2.0"
}
apply from: "$rootDir/profile-java17.gradle"

node {
  // Version of node to use.
  version = '12.13.1'

  // Version of npm to use.
  npmVersion = '6.12.1'

  // Version of Yarn to use.
  yarnVersion = '1.19.2'

  // Base URL for fetching node distributions (change if you have a mirror).
  distBaseUrl = 'https://nodejs.org/dist'

  // If true, it will download node using above parameters.
  // If false, it will try to use globally installed node.
  download = true

  // Set the work directory for unpacking node
  workDir = file("${project.buildDir}/nodejs")

  // Set the work directory for NPM
  npmWorkDir = file("${project.buildDir}/npm")

  // Set the work directory for Yarn
  yarnWorkDir = file("${project.buildDir}/yarn")

  // Set the work directory where node_modules should be located
  nodeModulesDir = file("${project.buildDir}")
}

task create_workdir(type: Copy) {
  // copy .. ..
  from('src/main/webapp')
  into project.buildDir.path
}
//default yarn_install
task package_install(type: NpmTask, dependsOn: create_workdir) {
  // add the express package only
  args = ['install']   //'--modules-folder', project.buildDir.path + '/node_modules'
}
task build_package(type: NpmTask, dependsOn: package_install) {
  args = ['run', 'build']
}
task webapp(type: Copy, dependsOn: build_package) {
  from("${project.buildDir}/build")
  into project(':sylph-dist').buildDir.path + '/webapp'
}
//assemble.dependsOn webapp
//project(':sylph-dist').dist.dependsOn webapp

dependencies {
  annotationProcessor 'org.projectlombok:lombok:1.18.22'
  compileOnly 'org.projectlombok:lombok:1.18.22'

  implementation group: 'com.google.guava', name: 'guava', version: deps.guava
  implementation(group: 'ch.qos.logback', name: 'logback-classic', version: '1.3.0-alpha5') {
    exclude(group: "javax.activation", module: "activation")
  }

  implementation(project(':sylph-spi'))
  implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
  implementation "org.eclipse.jetty:jetty-servlet:${deps.jetty}"
  implementation "org.eclipse.jetty:jetty-server:${deps.jetty}"
  implementation("org.glassfish.jersey.containers:jersey-container-servlet:$deps.jersey") {
    exclude(module: 'javassist')
  }
  implementation("org.glassfish.jersey.media:jersey-media-json-jackson:$deps.jersey") {
    exclude(module: 'javassist')
  }
  implementation(group: 'org.glassfish.jersey.media', name: 'jersey-media-multipart', version: deps.jersey) {
    exclude(module: 'javassist')
  }
  implementation("org.glassfish.jersey.inject:jersey-hk2:$deps.jersey") {
    exclude(module: 'javassist')
  }
}